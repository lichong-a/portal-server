plugins {
    id 'org.hibernate.orm' version "${hibernatePluginVersion}"
    id 'org.graalvm.buildtools.native' version "${graalvmNativePluginVersion}"
}

java {
    withSourcesJar()
    withJavadocJar()
}

dependencies {
    api project(':common:domain')
    api 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    api "com.github.penggle:kaptcha:${kaptchaVersion}"
    api "com.github.xiaoymin:knife4j-openapi3-jakarta-spring-boot-starter:${knife4jVersion}"
    api "com.qcloud:cos_api:${cosVersion}"
    api "com.google.code.gson:gson:${gsonVersion}"
    api "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    api "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    api "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"
    api 'org.flywaydb:flyway-core'
    api "org.redisson:redisson:${redissonVersion}"
    api "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
    api 'org.springframework.boot:spring-boot-starter-actuator'
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    api 'org.springframework.boot:spring-boot-starter-data-redis'
    api 'org.springframework.boot:spring-boot-starter-oauth2-client'
    api 'org.springframework.boot:spring-boot-starter-security'
    api 'org.springframework.boot:spring-boot-starter-validation'
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.cloud:spring-cloud-starter-openfeign'
    api 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    runtimeOnly 'org.postgresql:postgresql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
