plugins {
    id 'org.hibernate.orm' version "${hibernatePluginVersion}"
    id 'org.graalvm.buildtools.native' version "${graalvmNativePluginVersion}"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
        vendor = JvmVendorSpec.BELLSOFT
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

springBoot {
    mainClass = 'org.funcode.portal.server.starter.PortalServerApplication'
    bootBuildImage {
        imageName = "${rootProject.name}"
        docker {
            if (System.getProperty('os.name').toLowerCase().contains('windows')){
                host = "//./pipe/dockerDesktopLinuxEngine"
            }
        }
        verboseLogging = true
    }
    buildInfo {
        properties {
            artifact = "${rootProject.name}"
            name = "${rootProject.name}"
        }
    }
    bootJar {
        launchScript()
        archiveClassifier = 'boot'
        archiveBaseName = "${rootProject.name}"
        manifest {
            attributes 'Implementation-Title': "${rootProject.name} Application",
                    'Implementation-Vendor': "${rootProject.name} Team",
                    'Start-Class': 'org.funcode.portal.server.starter.PortalServerApplication'
        }
    }
}

jar {
    archiveClassifier = ''
}

clean {
    delete rootProject.file('logs')
}

dependencies {
    implementation project(':common:core')
    implementation project(':module:system')
    implementation project(':module:ielts')
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}
