server:
  port: 8080
  servlet:
    context-path: /
application:
  security:
    # 管理员用户名
    admin-username: ${ADMIN_USERNAME}
    # 管理员密码
    admin-password: ${ADMIN_PASSWORD}
    # 注销成功跳转地址，默认为"/login?logout"
    logout-success-url:
    # 登录页地址，默认：/login
    login-page:
    token:
      # 签名密钥
      signing-key: portalserver8fas8hage9SHVfsd847GD8475fd8880ejf
      # access-token过期时间，单位：分钟
      expiration: 30
      # refresh-token的过期时间，单位：分钟
      refresh-expiration: 10080
spring:
  application:
    name: portal-server
  config:
    import: optional:classpath:docker/.env[.properties]
  cloud:
    nacos:
      discovery: #启用 spring cloud nacos discovery
        server-addr: ${NACOS_IP}:${NACOS_PORT}
        namespace: ${NACOS_NAMESPACE}
        username: ${NACOS_USERNAME}
        password: ${NACOS_PASS}
        watch:
          enabled: true
        enabled: ${NACOS_ENABLE}
        group: ${NACOS_GROUP}
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${PG_HOST}:${PG_PORT}/${PG_DB}
    username: ${PG_USER}
    password: ${PG_PASS}
    type: com.zaxxer.hikari.HikariDataSource
    # hikari连接池配置
    hikari:
      #连接池名
      pool-name: HikariCP
      #最小空闲连接数
      minimum-idle: 5
      # 空闲连接存活最大时间，默认10分钟
      idle-timeout: 600000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒
      connection-timeout: 30000
      # 连接测试query
      connection-test-query: SELECT 1
  flyway:
    # 是否启用
    enabled: ${FLYWAY_ENABLE}
    encoding: UTF-8
    # 可以支持多个location, 用','隔开
    locations: classpath:db/migration
    # migrate是否校验
    validate-on-migrate: true
    # false 会删除指定 schema 下的所有 table, 生产务必禁掉。
    clean-disabled: true
    # 如果数据库不是空表，需要设置成 true，否则启动报错
    baseline-on-migrate: true
    # 版本控制日志表，默认flyway_schema_history,不同系统建议修改
    table: ${FLYWAY_TABLE}
    # 占位符替换是否开启
    placeholder-replacement: ${FLYWAY_SQL_PLACEHOLDER_REPLACEMENT}
    placeholder-prefix: ${FLYWAY_SQL_PLACEHOLDER_PREFIX}
    placeholder-suffix: ${FLYWAY_SQL_PLACEHOLDER_SUFFIX}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      username: ${REDIS_USER}
      password: ${REDIS_PASS}
      database: 0
      timeout: 3000
      connect-timeout: 5000
      lettuce:
        pool:
          # 最小空闲连接
          min-idle: 5
          # 最大空闲连接
          max-idle: 10
          # 最大连接数
          max-active: 100
          # 连接分配应该阻塞的最大时间
          max-wait: 2000
  jpa:
    generate-ddl: true
    open-in-view: false
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        physical_naming_strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        format_sql: true
  docker:
    compose:
      enabled: ${COMPOSE_ENABLE}
      file: classpath:docker/compose.yaml
springdoc:
  api-docs:
    enabled: ${API_DOC_ENABLE}
    version: openapi_3_0
    path: /v3/api-docs
  swagger-ui:
    enabled: ${API_DOC_ENABLE}
    path: /swagger-ui
  show-login-endpoint: true
  show-oauth2-endpoints: true
knife4j:
  enable: ${API_DOC_ENABLE}
  setting:
    language: zh_cn
logging:
  level:
    root: info
  file:
    path: ./logs
    name: ${logging.file.path}/${spring.application.name}.log
  logback:
    rollingpolicy:
      file-name-pattern: ${logging.file.path}/%d{yyyy-MM-dd}/${spring.application.name}-%d{yyyy-MM-dd}.%i.log
      max-file-size: 50MB
      max-history: 30
      total-size-cap: 5GB
